WEB Forum Project
This is a simple forum application implemented in Go. It allows users to sign up, log in, create posts, comment on posts, and like/dislike posts.

Features
User sign up: Users can create an account by providing their username, email, and password.
User login: Users can log in using their email and password.
Create posts: Logged-in users can create new posts by providing a title and content.
Comment on posts: Logged-in users can comment on existing posts.
Like/Dislike posts: Users can like or dislike posts.
Read-only mode: Users can view all posts and comments without logging in.

Dependencies
github.com/mattn/go-sqlite3: SQLite driver for Go.
golang.org/x/crypto/bcrypt: Package for hashing and comparing passwords.


Usage
Access the application in your web browser at http://localhost:5799.
Sign up for a new account or log in with your existing credentials.
Create posts, comment on posts, like/dislike posts, or simply view posts and comments in read-only mode.

Database
The application uses an SQLite database to store user information, posts, and comments. The database file forum.db will be created in the current directory upon running the application.


Front-end:

HTML: Used for creating the structure and content of web pages.
CSS: Used for styling and formatting the appearance of web pages.
JavaScript (JS): Used for adding interactivity and dynamic behavior to web pages.
Back-end:

Go (Golang): Used as the programming language for the server-side logic and handling HTTP requests.
Database:

SQLite: Used as the relational database management system (RDBMS) for storing and retrieving data.
Overall, the application appears to be a web forum or discussion board where users can sign up, log in, create posts, leave comments, like/dislike posts, and view posts with their associated comments.

Please note that the code you provided is missing some parts, such as HTML templates and CSS stylesheets, which are essential for the complete functionality and visual representation of the application.
